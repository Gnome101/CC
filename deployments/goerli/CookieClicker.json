{
  "address": "0x8c34FbD43039beE94338272db4B67223929Df53e",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "captchaAddy",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "captchaNeededForUser",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "clickAmount",
          "type": "uint256"
        }
      ],
      "name": "addClick",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "callForCaptcha",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "captchaContract",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "click",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "browserID",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        }
      ],
      "name": "completeSession",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "timeStarted",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "timeEnded",
          "type": "uint256"
        }
      ],
      "name": "confirmCaptcha",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "createCookie",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "browserID",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "userAddy",
          "type": "address"
        }
      ],
      "name": "createHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "newHash",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "d",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "endSession",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "getSessionUserInterest",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "interestEarned",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "getUserCookieBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "cookieBalance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "getUserInterest",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "interestEarned",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "idToUpgrade",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "cost",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "cookieRateBooster",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "clickModiferBooster",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "idUserToNum",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "mostRecentUserSession",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "expiraryDate",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "sessionActive",
          "type": "bool"
        },
        {
          "internalType": "bytes32",
          "name": "sessionHash",
          "type": "bytes32"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "totalClicks",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalSpent",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "cookiePerSecond",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "interestLastComputed",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "clickModifier",
              "type": "uint256"
            }
          ],
          "internalType": "struct CookieClicker.cookieGame",
          "name": "sessionGame",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "userInterest",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "upgradeID",
          "type": "uint256"
        }
      ],
      "name": "purchaseUpgrade",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "upgradeID",
          "type": "uint256"
        }
      ],
      "name": "purchaseUpgradeForUser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "simulateClick",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "clickAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "createdHash",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "sessionLength",
          "type": "uint256"
        }
      ],
      "name": "startSession",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userCookie",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "totalClicks",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalSpent",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "cookiePerSecond",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "interestLastComputed",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "clickModifier",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "browserID",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "userAddy",
          "type": "address"
        }
      ],
      "name": "verifySession",
      "outputs": [
        {
          "internalType": "bool",
          "name": "valid",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xbb4087a65d22d796fb397ca50ac7a6d950059a07d100fae600ec0695439f0d84",
  "receipt": {
    "to": null,
    "from": "0x19d96301865fdD07427db3c445508A051BC6D352",
    "contractAddress": "0x8c34FbD43039beE94338272db4B67223929Df53e",
    "transactionIndex": 37,
    "gasUsed": "1058752",
    "logsBloom": "0x
    "blockHash": "0x7fda351fd089fff61195d10fba1e121c8402ca423bd1f3f6ec3907e7ea64b64c",
    "transactionHash": "0xbb4087a65d22d796fb397ca50ac7a6d950059a07d100fae600ec0695439f0d84",
    "logs": [],
    "blockNumber": 8838564,
    "cumulativeGasUsed": "8340351",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x963C7950B97e2ce301Eb49Fb1928aA5C7fe8e8eC"
  ],
  "numDeployments": 1,
  "solcInputHash": "febbca65db1fb438a94b8c79da958bca",
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"captchaAddy\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"captchaNeededForUser\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"clickAmount\",\"type\":\"uint256\"}],\"name\":\"addClick\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"callForCaptcha\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"captchaContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"click\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"browserID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"completeSession\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timeStarted\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timeEnded\",\"type\":\"uint256\"}],\"name\":\"confirmCaptcha\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createCookie\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"browserID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"userAddy\",\"type\":\"address\"}],\"name\":\"createHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"newHash\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"d\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"endSession\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getSessionUserInterest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"interestEarned\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserCookieBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"cookieBalance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserInterest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"interestEarned\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"idToUpgrade\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"cost\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cookieRateBooster\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"clickModiferBooster\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"idUserToNum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"mostRecentUserSession\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"expiraryDate\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"sessionActive\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"sessionHash\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"totalClicks\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSpent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cookiePerSecond\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interestLastComputed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"clickModifier\",\"type\":\"uint256\"}],\"internalType\":\"struct CookieClicker.cookieGame\",\"name\":\"sessionGame\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"userInterest\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"upgradeID\",\"type\":\"uint256\"}],\"name\":\"purchaseUpgrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"upgradeID\",\"type\":\"uint256\"}],\"name\":\"purchaseUpgradeForUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"simulateClick\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"clickAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"createdHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"sessionLength\",\"type\":\"uint256\"}],\"name\":\"startSession\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userCookie\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalClicks\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSpent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cookiePerSecond\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interestLastComputed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"clickModifier\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"browserID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"userAddy\",\"type\":\"address\"}],\"name\":\"verifySession\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CookieClicker.sol\":\"CookieClicker\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"contracts/CookieClicker.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.18;\\n\\n//Users can upgrade their cookie and earn more\\n//For example, a user can do a cursor upgrade and earn 0.1 cookies per second\\n//Users are given an ERC20 token called cookies(right now just points)\\ninterface ZKaptchaInterface {\\n    function verifyZkProof(bytes calldata zkProof) external view returns (bool);\\n}\\n\\ncontract CookieClicker {\\n    address immutable dev;\\n    ZKaptchaInterface immutable zkaptcha;\\n    address public immutable captchaContract;\\n    event captchaNeededForUser(address indexed user);\\n\\n    modifier sessionStarted(address user) {\\n        //The game only works if a session was started\\n        require(block.timestamp <= mostRecentUserSession[user].expiraryDate);\\n        require(mostRecentUserSession[user].sessionActive);\\n        _;\\n    }\\n    modifier onlyDev() {\\n        //The game only works if a session was started\\n        require(msg.sender == dev);\\n        _;\\n    }\\n\\n    // implement ZKaptcha anti-bot in your smart contract\\n\\n    constructor(address captchaAddy) {\\n        dev = msg.sender;\\n        idToUpgrade[1] = Upgrade(10, 1, 0);\\n        idToUpgrade[2] = Upgrade(10, 0, 1);\\n        zkaptcha = ZKaptchaInterface(\\n            0xf5DCa59461adFFF5089BE5068364eC10B86c2a88\\n        );\\n        captchaContract = captchaAddy;\\n    }\\n\\n    mapping(address => cookieGame) public userCookie;\\n    mapping(address => GameSession) public mostRecentUserSession;\\n    uint256 public d;\\n    mapping(uint256 => Upgrade) public idToUpgrade;\\n    mapping(address => mapping(uint256 => uint256)) public idUserToNum; //Tracks the number of purchases of a single upgrade\\n\\n    struct cookieGame {\\n        uint256 totalClicks;\\n        uint256 totalSpent;\\n        uint256 cookiePerSecond; //Users can earn more per second\\n        uint256 interestLastComputed;\\n        uint256 clickModifier;\\n    }\\n    struct GameSession {\\n        uint256 expiraryDate;\\n        bool sessionActive;\\n        bytes32 sessionHash;\\n        cookieGame sessionGame;\\n        uint256 userInterest;\\n    }\\n    struct Upgrade {\\n        //Turn into NFT in future\\n        uint256 cost;\\n        uint256 cookieRateBooster;\\n        uint256 clickModiferBooster;\\n    }\\n\\n    function createCookie() public {\\n        //Make sure user does block.timestamp first\\n        userCookie[msg.sender] = cookieGame(0, 0, 0, block.timestamp, 0);\\n    }\\n\\n    function click() public {\\n        userCookie[msg.sender].totalClicks +=\\n            1 +\\n            userCookie[msg.sender].clickModifier;\\n    }\\n\\n    function simulateClick(\\n        address user\\n    ) public view returns (uint256 clickAmount) {\\n        clickAmount +=\\n            1 +\\n            mostRecentUserSession[user].sessionGame.clickModifier;\\n    }\\n\\n    mapping(address => uint256) userCaptchaStart;\\n\\n    function callForCaptcha(address user) public onlyDev {\\n        //emit event()\\n        emit captchaNeededForUser(user);\\n    }\\n\\n    function confirmCaptcha(\\n        address user,\\n        uint256 timeStarted,\\n        uint256 timeEnded\\n    ) public onlyDev {\\n        mostRecentUserSession[user].sessionGame.totalSpent =\\n            (timeEnded - timeStarted) *\\n            10;\\n    }\\n\\n    function addClick(\\n        address user,\\n        uint256 clickAmount\\n    ) public sessionStarted(user) {\\n        mostRecentUserSession[user].sessionGame.totalClicks += clickAmount;\\n    }\\n\\n    //Might make it so that a user has to send a transaction when they purchase an upgrade\\n    //Whenever a user purchases a cookie, the program adds up their interest\\n    function purchaseUpgrade(uint256 upgradeID) public {\\n        idUserToNum[msg.sender][upgradeID]++;\\n        uint256 cookieBalance = getUserCookieBalance(msg.sender);\\n        userCookie[msg.sender].interestLastComputed = block.timestamp;\\n        require(cookieBalance >= idToUpgrade[upgradeID].cost);\\n        userCookie[msg.sender].totalSpent +=\\n            idToUpgrade[upgradeID].cost *\\n            idUserToNum[msg.sender][upgradeID];\\n        userCookie[msg.sender].cookiePerSecond += idToUpgrade[upgradeID]\\n            .cookieRateBooster;\\n        userCookie[msg.sender].clickModifier += idToUpgrade[upgradeID]\\n            .clickModiferBooster;\\n    }\\n\\n    function purchaseUpgradeForUser(\\n        address user,\\n        uint256 upgradeID\\n    ) public onlyDev {\\n        //We are going to be applying a debt to the user\\n        idUserToNum[msg.sender][upgradeID]++;\\n        require(idToUpgrade[upgradeID].cost > 0, \\\"Not Real ID\\\");\\n        mostRecentUserSession[user].sessionGame.totalSpent +=\\n            idToUpgrade[upgradeID].cost *\\n            idUserToNum[msg.sender][upgradeID];\\n        mostRecentUserSession[user].userInterest = getSessionUserInterest(user);\\n\\n        //require(cookieBalance >= idToUpgrade[upgradeID].cost);\\n        mostRecentUserSession[user].sessionGame.cookiePerSecond += idToUpgrade[\\n            upgradeID\\n        ].cookieRateBooster;\\n        mostRecentUserSession[user].sessionGame.clickModifier += idToUpgrade[\\n            upgradeID\\n        ].clickModiferBooster;\\n        userCookie[user].interestLastComputed = block.timestamp; //Resetting interest\\n    }\\n\\n    function getSessionUserInterest(\\n        address user\\n    ) public view returns (uint256 interestEarned) {\\n        uint256 timePassed = block.timestamp -\\n            userCookie[user].interestLastComputed;\\n\\n        interestEarned =\\n            timePassed *\\n            mostRecentUserSession[user].sessionGame.cookiePerSecond;\\n    }\\n\\n    function getUserInterest(\\n        address user\\n    ) public view returns (uint256 interestEarned) {\\n        uint256 timePassed = block.timestamp -\\n            userCookie[user].interestLastComputed;\\n\\n        interestEarned = timePassed * userCookie[user].cookiePerSecond;\\n        if (mostRecentUserSession[user].sessionActive) interestEarned = 0; //If there is already a session then dont count regular interest NO DOUBLE DIPPING\\n    }\\n\\n    function getUserCookieBalance(\\n        address user\\n    ) public view returns (uint256 cookieBalance) {\\n        cookieGame memory currentGame = userCookie[user];\\n        uint256 interestEarned = getUserInterest(user);\\n        cookieBalance =\\n            currentGame.totalClicks -\\n            currentGame.totalSpent +\\n            interestEarned;\\n    }\\n\\n    function startSession(bytes32 createdHash, uint256 sessionLength) public {\\n        mostRecentUserSession[msg.sender].sessionHash = createdHash;\\n        mostRecentUserSession[msg.sender].expiraryDate =\\n            block.timestamp +\\n            sessionLength;\\n        //Set the session cookie rate as the users current rate\\n        mostRecentUserSession[msg.sender]\\n            .sessionGame\\n            .cookiePerSecond = userCookie[msg.sender].cookiePerSecond;\\n        //Set the session click modifier as the user's current modifier\\n        mostRecentUserSession[msg.sender]\\n            .sessionGame\\n            .clickModifier = userCookie[msg.sender].clickModifier;\\n\\n        mostRecentUserSession[msg.sender].sessionActive = true;\\n    }\\n\\n    function createHash(\\n        uint256 browserID,\\n        address userAddy\\n    ) public pure returns (bytes32 newHash) {\\n        newHash = keccak256(abi.encodePacked(browserID, userAddy));\\n    }\\n\\n    function verifySession(\\n        uint256 browserID, //We can make this bytes\\n        address userAddy\\n    ) public view returns (bool valid) {\\n        valid = mostRecentUserSession[userAddy].sessionHash ==\\n            keccak256(abi.encodePacked(browserID, userAddy))\\n            ? true\\n            : false;\\n    }\\n\\n    function endSession() public {\\n        //Allows a user to end a session and prevent it from happening\\n        mostRecentUserSession[msg.sender].sessionActive = false;\\n        //We could have an event fire off or something\\n    }\\n\\n    function completeSession(\\n        uint256 browserID,\\n        address userAddress\\n    ) public onlyDev sessionStarted(userAddress) {\\n        require(verifySession(browserID, userAddress));\\n        userCookie[userAddress].totalClicks += mostRecentUserSession[\\n            userAddress\\n        ].sessionGame.totalClicks;\\n        uint256 userDebt = mostRecentUserSession[userAddress]\\n            .sessionGame\\n            .totalSpent;\\n        uint256 userInterest = mostRecentUserSession[userAddress].userInterest;\\n\\n        require(getUserCookieBalance(userAddress) + userInterest >= userDebt);\\n        userCookie[userAddress].totalSpent += userDebt;\\n        userCookie[userAddress].clickModifier = mostRecentUserSession[\\n            userAddress\\n        ].sessionGame.clickModifier;\\n        userCookie[userAddress].cookiePerSecond = mostRecentUserSession[\\n            userAddress\\n        ].sessionGame.cookiePerSecond;\\n        mostRecentUserSession[userAddress].sessionActive = false;\\n        userCookie[userAddress].interestLastComputed = block.timestamp; //Resetting interest\\n\\n        delete mostRecentUserSession[userAddress];\\n    }\\n}\\n\",\"keccak256\":\"0x0264992689e3cb6327bde99e48d8c035f3275496cfa0d3d8c001e006620348b9\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60e060405234801561001057600080fd5b5060405161125338038061125383398101604081905261002f9161017a565b336080526040805160608082018352600a808352600160208085018281526000868801818152848252600380855297517fa15bc60c955c405d20d9149c709e2460f1c2d9a497496a7f46004d1772c3054c5591517fa15bc60c955c405d20d9149c709e2460f1c2d9a497496a7f46004d1772c3054d5590517fa15bc60c955c405d20d9149c709e2460f1c2d9a497496a7f46004d1772c3054e55865194850187529284528381018381529584019182526002909252929052517fc3a24b0501bd2c13a7e57f2db4369ec4c223447539fc0724a9d55ac4a06ebd4d5590517fc3a24b0501bd2c13a7e57f2db4369ec4c223447539fc0724a9d55ac4a06ebd4e55517fc3a24b0501bd2c13a7e57f2db4369ec4c223447539fc0724a9d55ac4a06ebd4f5573f5dca59461adfff5089be5068364ec10b86c2a8860a0526001600160a01b031660c0526101aa565b60006020828403121561018c57600080fd5b81516001600160a01b03811681146101a357600080fd5b9392505050565b60805160a05160c0516110686101eb6000396000610300015260005050600081816106a801528181610975015281816109e10152610c3501526110686000f3fe608060405234801561001057600080fd5b50600436106101825760003560e01c8063c79423fc116100d8578063e237a3fc1161008c578063e8a8e23111610066578063e8a8e231146104d7578063e927740b146104ea578063e97ff4e0146104fd57600080fd5b8063e237a3fc1461045a578063e36840dd1461047a578063e55a9ddf1461048d57600080fd5b8063d1159051116100bd578063d115905114610386578063e0fc5870146103eb578063e1b1a214146103fe57600080fd5b8063c79423fc14610360578063cd2346721461037357600080fd5b80638a054ac21161013a57806394f41a881161011457806394f41a88146102fb578063ad8150781461033a578063bf8853c61461034d57600080fd5b80638a054ac2146102cc5780638fa5cbc3146102d557806394d1441c146102e857600080fd5b80636e6114001161016b5780636e611400146101da578063769edf6a146102b15780637d55923d146102c457600080fd5b806301ad14db1461018757806312a049661461019c575b600080fd5b61019a610195366004610eaf565b610520565b005b6101c76101aa366004610eaf565b600460209081526000928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b6102546101e8366004610ed9565b6001602081815260009283526040928390208054928101546002820154855160a081018752600384015481526004840154948101949094526005830154958401959095526006820154606084015260078201546080840152600890910154929360ff9091169290919085565b60408051958652931515602080870191909152858501939093528151606080870191909152928201516080808701919091529382015160a08601529181015160c0850152919091015160e0830152610100820152610120016101d1565b6101c76102bf366004610ef4565b6105a5565b61019a6105f3565b6101c760025481565b61019a6102e3366004610f20565b610637565b61019a6102f6366004610eaf565b61069d565b6103227f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016101d1565b6101c7610348366004610ed9565b61088e565b6101c761035b366004610ed9565b6108e6565b61019a61036e366004610ed9565b61096a565b61019a610381366004610f42565b6109d6565b6103c3610394366004610ed9565b600060208190529081526040902080546001820154600283015460038401546004909401549293919290919085565b604080519586526020860194909452928401919091526060830152608082015260a0016101d1565b61019a6103f9366004610f75565b610a44565b61019a6040805160a0810182526000808252602080830182815283850183815242606086019081526080860185815233865293859052959093209351845551600184015590516002830155915160038201559051600490910155565b61019a33600090815260016020819052604090912001805460ff19169055565b6101c7610488366004610ed9565b610b70565b6104bc61049b366004610f75565b60036020526000908152604090208054600182015460029092015490919083565b604080519384526020840192909252908201526060016101d1565b6101c76104e5366004610ed9565b610bf3565b61019a6104f8366004610ef4565b610c2a565b61051061050b366004610ef4565b610dfe565b60405190151581526020016101d1565b6001600160a01b038216600090815260016020526040902054829042111561054757600080fd5b6001600160a01b0381166000908152600160208190526040909120015460ff1661057057600080fd5b6001600160a01b0383166000908152600160205260408120600301805484929061059b908490610fbd565b9091555050505050565b600082826040516020016105d592919091825260601b6bffffffffffffffffffffffff1916602082015260340190565b60405160208183030381529060405280519060200120905092915050565b33600090815260208190526040902060040154610611906001610fbd565b3360009081526020819052604081208054909190610630908490610fbd565b9091555050565b3360009081526001602052604090206002018290556106568142610fbd565b3360009081526001602081815260408084209485558382529092206002810154600585015560040154918190526007830191909155908101805460ff191690911790555050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146106d257600080fd5b33600090815260046020908152604080832084845290915281208054916106f883610fd0565b9091555050600081815260036020526040902054610776576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600b60248201527f4e6f74205265616c204944000000000000000000000000000000000000000000604482015260640160405180910390fd5b3360009081526004602090815260408083208484528252808320546003909252909120546107a49190611008565b6001600160a01b038316600090815260016020526040812060040180549091906107cf908490610fbd565b909155506107de90508261088e565b6001600160a01b03831660008181526001602081815260408084206008810196909655868452600382528320820154938352526005909201805491929091610827908490610fbd565b90915550506000818152600360209081526040808320600201546001600160a01b038616845260019092528220600701805491929091610868908490610fbd565b9091555050506001600160a01b0316600090815260208190526040902042600390910155565b6001600160a01b03811660009081526020819052604081206003015481906108b6904261101f565b6001600160a01b0384166000908152600160205260409020600501549091506108df9082611008565b9392505050565b6001600160a01b038116600090815260208190526040812060030154819061090e904261101f565b6001600160a01b0384166000908152602081905260409020600201549091506109379082611008565b6001600160a01b0384166000908152600160208190526040909120015490925060ff161561096457600091505b50919050565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461099f57600080fd5b6040516001600160a01b038216907fdc5293c985ffbfee788e4bae0eebc5de237c91c5918a782fdcaa2fd661374ae290600090a250565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610a0b57600080fd5b610a15828261101f565b610a2090600a611008565b6001600160a01b039093166000908152600160205260409020600401929092555050565b3360009081526004602090815260408083208484529091528120805491610a6a83610fd0565b91905055506000610a7a33610b70565b3360009081526020818152604080832042600391820155868452909152902054909150811015610aa957600080fd5b336000908152600460209081526040808320858452825280832054600390925290912054610ad79190611008565b3360009081526020819052604081206001018054909190610af9908490610fbd565b9091555050600082815260036020908152604080832060010154338452918390528220600201805491929091610b30908490610fbd565b9091555050600082815260036020908152604080832060020154338452918390528220600401805491929091610b67908490610fbd565b90915550505050565b6001600160a01b038116600090815260208181526040808320815160a081018352815481526001820154938101939093526002810154918301919091526003810154606083015260040154608082015281610bca846108e6565b90508082602001518360000151610be1919061101f565b610beb9190610fbd565b949350505050565b6001600160a01b0381166000908152600160208190526040822060070154610c1a91610fbd565b610c249082610fbd565b92915050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610c5f57600080fd5b6001600160a01b0381166000908152600160205260409020548190421115610c8657600080fd5b6001600160a01b0381166000908152600160208190526040909120015460ff16610caf57600080fd5b610cb98383610dfe565b610cc257600080fd5b6001600160a01b038216600090815260016020908152604080832060030154918390528220805491929091610cf8908490610fbd565b90915550506001600160a01b038216600090815260016020526040902060048101546008909101548181610d2b86610b70565b610d359190610fbd565b1015610d4057600080fd5b6001600160a01b03841660009081526020819052604081206001018054849290610d6b908490610fbd565b9091555050506001600160a01b039092166000908152600160208181526040808420600781018054868552928620600481810194909455600583018054600280840191909155848801805460ff1990811682554260039586015598909752888555865490971690955594820186905593810185905590810184905590839055600681018390559082905560080155505050565b60008282604051602001610e2e92919091825260601b6bffffffffffffffffffffffff1916602082015260340190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815291815281516020928301206001600160a01b0385166000908152600190935291206002015414610e8a5760006108df565b60019392505050565b80356001600160a01b0381168114610eaa57600080fd5b919050565b60008060408385031215610ec257600080fd5b610ecb83610e93565b946020939093013593505050565b600060208284031215610eeb57600080fd5b6108df82610e93565b60008060408385031215610f0757600080fd5b82359150610f1760208401610e93565b90509250929050565b60008060408385031215610f3357600080fd5b50508035926020909101359150565b600080600060608486031215610f5757600080fd5b610f6084610e93565b95602085013595506040909401359392505050565b600060208284031215610f8757600080fd5b5035919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b80820180821115610c2457610c24610f8e565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361100157611001610f8e565b5060010190565b8082028115828204841417610c2457610c24610f8e565b81810381811115610c2457610c24610f8e56fea2646970667358221220f5ed46cea3cd887a4f30237e088faa93092ef91388411a47ab522d851f92391e64736f6c63430008120033",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 100,
        "contract": "contracts/CookieClicker.sol:CookieClicker",
        "label": "userCookie",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_struct(cookieGame)129_storage)"
      },
      {
        "astId": 105,
        "contract": "contracts/CookieClicker.sol:CookieClicker",
        "label": "mostRecentUserSession",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_struct(GameSession)141_storage)"
      },
      {
        "astId": 107,
        "contract": "contracts/CookieClicker.sol:CookieClicker",
        "label": "d",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 112,
        "contract": "contracts/CookieClicker.sol:CookieClicker",
        "label": "idToUpgrade",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_uint256,t_struct(Upgrade)148_storage)"
      },
      {
        "astId": 118,
        "contract": "contracts/CookieClicker.sol:CookieClicker",
        "label": "idUserToNum",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))"
      },
      {
        "astId": 206,
        "contract": "contracts/CookieClicker.sol:CookieClicker",
        "label": "userCaptchaStart",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_uint256)"
      },
      "t_mapping(t_address,t_struct(GameSession)141_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct CookieClicker.GameSession)",
        "numberOfBytes": "32",
        "value": "t_struct(GameSession)141_storage"
      },
      "t_mapping(t_address,t_struct(cookieGame)129_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct CookieClicker.cookieGame)",
        "numberOfBytes": "32",
        "value": "t_struct(cookieGame)129_storage"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_struct(Upgrade)148_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct CookieClicker.Upgrade)",
        "numberOfBytes": "32",
        "value": "t_struct(Upgrade)148_storage"
      },
      "t_mapping(t_uint256,t_uint256)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_struct(GameSession)141_storage": {
        "encoding": "inplace",
        "label": "struct CookieClicker.GameSession",
        "members": [
          {
            "astId": 131,
            "contract": "contracts/CookieClicker.sol:CookieClicker",
            "label": "expiraryDate",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 133,
            "contract": "contracts/CookieClicker.sol:CookieClicker",
            "label": "sessionActive",
            "offset": 0,
            "slot": "1",
            "type": "t_bool"
          },
          {
            "astId": 135,
            "contract": "contracts/CookieClicker.sol:CookieClicker",
            "label": "sessionHash",
            "offset": 0,
            "slot": "2",
            "type": "t_bytes32"
          },
          {
            "astId": 138,
            "contract": "contracts/CookieClicker.sol:CookieClicker",
            "label": "sessionGame",
            "offset": 0,
            "slot": "3",
            "type": "t_struct(cookieGame)129_storage"
          },
          {
            "astId": 140,
            "contract": "contracts/CookieClicker.sol:CookieClicker",
            "label": "userInterest",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "288"
      },
      "t_struct(Upgrade)148_storage": {
        "encoding": "inplace",
        "label": "struct CookieClicker.Upgrade",
        "members": [
          {
            "astId": 143,
            "contract": "contracts/CookieClicker.sol:CookieClicker",
            "label": "cost",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 145,
            "contract": "contracts/CookieClicker.sol:CookieClicker",
            "label": "cookieRateBooster",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 147,
            "contract": "contracts/CookieClicker.sol:CookieClicker",
            "label": "clickModiferBooster",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_struct(cookieGame)129_storage": {
        "encoding": "inplace",
        "label": "struct CookieClicker.cookieGame",
        "members": [
          {
            "astId": 120,
            "contract": "contracts/CookieClicker.sol:CookieClicker",
            "label": "totalClicks",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 122,
            "contract": "contracts/CookieClicker.sol:CookieClicker",
            "label": "totalSpent",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 124,
            "contract": "contracts/CookieClicker.sol:CookieClicker",
            "label": "cookiePerSecond",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 126,
            "contract": "contracts/CookieClicker.sol:CookieClicker",
            "label": "interestLastComputed",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 128,
            "contract": "contracts/CookieClicker.sol:CookieClicker",
            "label": "clickModifier",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}